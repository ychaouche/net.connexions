#!/usr/bin/gawk -f

# use like this:
# AWKPATH=~/SYNCHRO/lib/ myawkscript -f awk (this file)
# or export AWKPATH in bashrc
# or use full path like this:
# myawkscript -f ~/SYNCRHO/lib/awk

BEGIN {
    regex_IP="([[:digit:]]{1,3}\\.){3}[[:digit:]]{1,3}";
}


function exec_command (command) {
    result="-"
    command | getline result
    close(command)
    return result
}

function get_country (ip) {
    command="net.ip.geo " ip;
    return exec_command(command);
}

function get_roundcube_username (ip) {
    command="mail.user.login.from " ip " | tail -n 1 | cut -f 5 -d ' '";
    return exec_command(command);
}

function get_ua (ua_string) {
    command=sprintf("pretty.ua '%s' ", ua_string);
    return exec_command(command);
}

function format_date (date_string) {
    # there's a dirty hack on first %s because date_string contains an opening " that's not closed
    
    command=sprintf("date -d %s +\"%%b %%d %%H:%%M:%%S\"", date_string);
    return exec_command(command);
}


function thousands(number,sep){
    sep = (sep == "" ? " " : sep)  # Définit le séparateur (par défaut un espace)

    # Séparer la partie entière et la partie décimale
    if (number ~ /\./) {
        integer = substr(number, 1, index(number, ".") - 1)
        decimal = substr(number, index(number, ".") + 1)
    } else {
        integer = number
        decimal = ""
    }

    # Ajout des séparateurs pour la partie entière
    rest = integer
    result = ""
    while (rest ~ /[0-9]{4,}/) {
        result = sep substr(rest, length(rest) - 2) result
        rest = substr(rest, 1, length(rest) - 3)
    }
    result = rest result

    # Ajouter la partie décimale si elle existe
    if (decimal != "") {
        result = result "." decimal
    }

    return result
}
